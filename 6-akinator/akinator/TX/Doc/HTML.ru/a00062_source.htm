<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Исходный файл TXWaveExample.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 172</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00062.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>TXWaveExample.cpp</h1>  </div>
</div>
<div class="contents">
<a href="a00062.htm">См. документацию.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//{================================================================================================================</span>
<a name="l00009"></a>00009 <span class="comment"></span><span class="comment">//              $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) &lt;mail@txlib.ru&gt; $</span>
<a name="l00010"></a>00010 <span class="comment">//}================================================================================================================</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="preprocessor">#include &quot;<a class="code" href="a00061.htm">..\TXWave.h</a>&quot;</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &lt;algorithm&gt;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="keywordtype">void</span> BeepDemo();
<a name="l00019"></a>00019 <span class="keywordtype">void</span> SinusDemo();
<a name="l00020"></a>00020 <span class="keywordtype">void</span> StereoDemo();
<a name="l00021"></a>00021 <span class="keywordtype">void</span> Sort1Demo();
<a name="l00022"></a>00022 <span class="keywordtype">void</span> Sort2Demo();
<a name="l00023"></a>00023 <span class="keywordtype">void</span> Sort3Demo();
<a name="l00024"></a>00024 <span class="keywordtype">void</span> BeepDemo2();
<a name="l00025"></a>00025 <span class="keywordtype">void</span> WaveformDemo();
<a name="l00026"></a>00026 <span class="keywordtype">void</span> CatPurrDemo();
<a name="l00027"></a>00027 <span class="keywordtype">void</span> RecordingDemo();
<a name="l00028"></a>00028 <span class="keywordtype">bool</span> <a class="code" href="a00080.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205" title="Функция-монитор, регулярно вызывающаяся при записи звука.">MonitorProc</a> (HWAVEIN, <a class="code" href="a00080.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>&amp; data, <span class="keywordtype">void</span>*);
<a name="l00029"></a>00029 <span class="keywordtype">void</span> Banner (<span class="keyword">const</span> <span class="keywordtype">char</span>* text);
<a name="l00030"></a>00030 <span class="keywordtype">void</span> Pause();
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 <span class="keyword">namespace </span>Kernel32 { _TX_DLLIMPORT (<span class="stringliteral">&quot;Kernel32&quot;</span>, HWND, GetConsoleWindow, (<span class="keywordtype">void</span>)); }
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keywordtype">int</span> main()
<a name="l00037"></a>00037     {
<a name="l00038"></a>00038     txDisableAutoPause();
<a name="l00039"></a>00039 
<a name="l00040"></a>00040     printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00041"></a>00041 
<a name="l00042"></a>00042     Banner (<span class="stringliteral">&quot;1/10: Beep demo&quot;</span>);
<a name="l00043"></a>00043     BeepDemo();
<a name="l00044"></a>00044     Pause();
<a name="l00045"></a>00045 
<a name="l00046"></a>00046     <a class="code" href="a00082.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);
<a name="l00047"></a>00047 
<a name="l00048"></a>00048     Banner (<span class="stringliteral">&quot;2/10: Sinus demo&quot;</span>);
<a name="l00049"></a>00049     SinusDemo();
<a name="l00050"></a>00050     Pause();
<a name="l00051"></a>00051 
<a name="l00052"></a>00052     printf (<span class="stringliteral">&quot;\n&quot;</span> <span class="stringliteral">&quot;For idea of the sorting demos see: https://www.youtube.com/watch?v=kPRA0W1kECg\n\n&quot;</span>);
<a name="l00053"></a>00053 
<a name="l00054"></a>00054     Banner (<span class="stringliteral">&quot;3/10: Shaker Sort demo&quot;</span>);
<a name="l00055"></a>00055     Sort1Demo();
<a name="l00056"></a>00056     Pause();
<a name="l00057"></a>00057 
<a name="l00058"></a>00058     Banner (<span class="stringliteral">&quot;4/10: std::sort (QuickSort) demo&quot;</span>);
<a name="l00059"></a>00059     Sort2Demo();
<a name="l00060"></a>00060     Pause();
<a name="l00061"></a>00061 
<a name="l00062"></a>00062     Banner (<span class="stringliteral">&quot;5/10: std::stable_sort (MergeSort) demo&quot;</span>);
<a name="l00063"></a>00063     Sort3Demo();
<a name="l00064"></a>00064     Pause();
<a name="l00065"></a>00065 
<a name="l00066"></a>00066     ShowWindow (Kernel32::GetConsoleWindow(), SW_SHOW);
<a name="l00067"></a>00067     ShowWindow (<a class="code" href="a00082.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>(), SW_HIDE);
<a name="l00068"></a>00068 
<a name="l00069"></a>00069     Banner (<span class="stringliteral">&quot;6/10: Stereo demo&quot;</span>);
<a name="l00070"></a>00070     StereoDemo();
<a name="l00071"></a>00071     Pause();
<a name="l00072"></a>00072 
<a name="l00073"></a>00073     Banner (<span class="stringliteral">&quot;7/10: Beep demo 2&quot;</span>);
<a name="l00074"></a>00074     BeepDemo2();
<a name="l00075"></a>00075     Pause();
<a name="l00076"></a>00076 
<a name="l00077"></a>00077     Banner (<span class="stringliteral">&quot;8/10: Waveform demo&quot;</span>);
<a name="l00078"></a>00078     WaveformDemo();
<a name="l00079"></a>00079     Pause();
<a name="l00080"></a>00080 
<a name="l00081"></a>00081     Banner (<span class="stringliteral">&quot;9/10: Cat purr demo&quot;</span>);
<a name="l00082"></a>00082     CatPurrDemo();
<a name="l00083"></a>00083     Pause();
<a name="l00084"></a>00084 
<a name="l00085"></a>00085     Banner (<span class="stringliteral">&quot;10/10: Recording demo&quot;</span>);
<a name="l00086"></a>00086     RecordingDemo();
<a name="l00087"></a>00087     Pause();
<a name="l00088"></a>00088 
<a name="l00089"></a>00089     Banner (<span class="stringliteral">&quot;All demos done&quot;</span>);
<a name="l00090"></a>00090     <span class="keywordflow">return</span> 0;
<a name="l00091"></a>00091     }
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="keywordtype">void</span> BeepDemo()
<a name="l00096"></a>00096     {
<a name="l00097"></a>00097     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (250, 880);
<a name="l00098"></a>00098     }
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 <span class="keywordtype">void</span> SinusDemo()
<a name="l00103"></a>00103     {
<a name="l00104"></a>00104     POINT size = <a class="code" href="a00082.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent</a>();
<a name="l00105"></a>00105 
<a name="l00106"></a>00106     <span class="keywordtype">double</span> x0 = -2*M_PI, x1 = +2*M_PI;
<a name="l00107"></a>00107     <span class="keywordtype">double</span> zoom = 50;
<a name="l00108"></a>00108 
<a name="l00109"></a>00109     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = -10; i &lt;= 10; i++)
<a name="l00110"></a>00110         {
<a name="l00111"></a>00111         <a class="code" href="a00082.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (i? <a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a> : <a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
<a name="l00112"></a>00112 
<a name="l00113"></a>00113         <a class="code" href="a00082.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (0, size.y/2 + i*zoom, size.x, size.y/2 + i*zoom);
<a name="l00114"></a>00114         <a class="code" href="a00082.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (size.x/2 + i*zoom, 0, size.x/2 + i*zoom, size.y);
<a name="l00115"></a>00115         }
<a name="l00116"></a>00116 
<a name="l00117"></a>00117     Banner (<span class="stringliteral">&quot;\f&quot;</span> <span class="stringliteral">&quot;SinusDemo. Press any key to stop...&quot;</span>);
<a name="l00118"></a>00118 
<a name="l00119"></a>00119     <span class="keywordflow">for</span> (<span class="keywordtype">double</span> x = x0; x &lt;= x1 &amp;&amp; !_kbhit(); x += (x1 - x0) / 101)
<a name="l00120"></a>00120         {
<a name="l00121"></a>00121         <span class="keywordtype">double</span> y = 5 * sin (x);
<a name="l00122"></a>00122 
<a name="l00123"></a>00123         <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (50, 880 + 88 * y);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125         <a class="code" href="a00082.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x*zoom + size.x/2, -y*zoom + size.y/2, 5);
<a name="l00126"></a>00126         }
<a name="l00127"></a>00127     }
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00130"></a>00130 
<a name="l00131"></a>00131 <span class="keywordtype">void</span> StereoDemo()
<a name="l00132"></a>00132     {
<a name="l00133"></a>00133     <span class="keywordflow">for</span> (<span class="keywordtype">double</span> t = -0.1; !_kbhit(); t += 0.1)
<a name="l00134"></a>00134         {
<a name="l00135"></a>00135         <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (50, 880 + 88 * cos (t), 100,
<a name="l00136"></a>00136                        880 + 88 * sin (t), 100);
<a name="l00137"></a>00137 
<a name="l00138"></a>00138         <span class="keyword">const</span> <span class="keywordtype">char</span> line[] = <span class="stringliteral">&quot;----------------------------------------&quot;</span>;
<a name="l00139"></a>00139         <span class="keyword">const</span> <span class="keywordtype">int</span>  lineSz = <span class="keyword">sizeof</span> (line) - 1;
<a name="l00140"></a>00140 
<a name="l00141"></a>00141         <span class="keywordtype">int</span> sz = (int) <a class="code" href="a00081.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> ((1 + cos (t))/2 * lineSz);
<a name="l00142"></a>00142         printf (<span class="stringliteral">&quot;Press any key to stop...     [%.*s|%.*s]  \r&quot;</span>, lineSz-sz, line, sz, line);
<a name="l00143"></a>00143         }
<a name="l00144"></a>00144 
<a name="l00145"></a>00145     printf (<span class="stringliteral">&quot;\n\n&quot;</span>);
<a name="l00146"></a>00146     }
<a name="l00147"></a>00147 
<a name="l00148"></a>00148 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00149"></a>00149 
<a name="l00150"></a>00150 <span class="keywordtype">void</span> BeepDemo2()
<a name="l00151"></a>00151     {
<a name="l00152"></a>00152     <span class="keywordtype">int</span> time = 2000;
<a name="l00153"></a>00153     <a class="code" href="a00080.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> wav (<a class="code" href="a00081.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> (time * <a class="code" href="a00080.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>));
<a name="l00154"></a>00154 
<a name="l00155"></a>00155     printf (<span class="stringliteral">&quot;Generating the waveform ~880 Hz...\n&quot;</span>);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157     <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 0; i &lt; wav.size(); i++)
<a name="l00158"></a>00158         wav[i][0] = wav[i][1] = (<span class="keywordtype">short</span>) (sin (i*0.125) * <a class="code" href="a00080.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>);  <span class="comment">// * 2*M_PI/44100 * 880</span>
<a name="l00159"></a>00159 
<a name="l00160"></a>00160     printf (<span class="stringliteral">&quot;Playing %d sec...\n\n&quot;</span>, time/1000);
<a name="l00161"></a>00161 
<a name="l00162"></a>00162     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (wav);
<a name="l00163"></a>00163     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a>();
<a name="l00164"></a>00164     }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00167"></a>00167 
<a name="l00168"></a>00168 <span class="keywordtype">void</span> WaveformDemo()
<a name="l00169"></a>00169     {
<a name="l00170"></a>00170     <span class="keywordtype">int</span> time = 90000;
<a name="l00171"></a>00171     <a class="code" href="a00080.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> buf (<a class="code" href="a00081.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> (time * <a class="code" href="a00080.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>));
<a name="l00172"></a>00172     <span class="keywordtype">unsigned</span> size = (unsigned) buf.size();
<a name="l00173"></a>00173 
<a name="l00174"></a>00174     printf (<span class="stringliteral">&quot;Generating the wave: (t &gt;&gt; 7 | t | t &gt;&gt; 6) * 10 + 4 * (t &amp; t &gt;&gt; 13 | t &gt;&gt; 6)...\n&quot;</span>
<a name="l00175"></a>00175             <span class="stringliteral">&quot;See: http://countercomplex.blogspot.ru/2011/10/algorithmic-symphonies-from-one-line-of.html\n\n&quot;</span>);
<a name="l00176"></a>00176 
<a name="l00177"></a>00177     <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 0; i &lt; size; i++)
<a name="l00178"></a>00178         {
<a name="l00179"></a>00179         <span class="keywordtype">int</span> t   = i/5;
<a name="l00180"></a>00180         <span class="keywordtype">int</span> val = (((t &gt;&gt; 7) | t | (t &gt;&gt; 6)) * 10 + 4 * ((t &amp; (t &gt;&gt; 13)) | (t &gt;&gt; 6))) &amp; 0xFF;
<a name="l00181"></a>00181 
<a name="l00182"></a>00182         buf[i][0] = buf[i][1] = (short) ((val/127.0 - 1) / (1 + pow (15, 17.0*i/size - 15)) * <a class="code" href="a00080.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>);
<a name="l00183"></a>00183         }
<a name="l00184"></a>00184 
<a name="l00185"></a>00185     printf (<span class="stringliteral">&quot;Now playing, press a key to stop...\n\n&quot;</span>);
<a name="l00186"></a>00186 
<a name="l00187"></a>00187     HWAVEOUT waveOut = <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (buf);
<a name="l00188"></a>00188 
<a name="l00189"></a>00189     <span class="keywordflow">while</span> (waveOut &amp;&amp; !_kbhit())
<a name="l00190"></a>00190         {
<a name="l00191"></a>00191         <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> pos = <a class="code" href="a00080.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition</a> (waveOut);
<a name="l00192"></a>00192         <span class="keywordtype">unsigned</span> done = (unsigned) (100 * pos/size);
<a name="l00193"></a>00193 
<a name="l00194"></a>00194         <span class="keyword">const</span> <span class="keywordtype">char</span> line[] = <span class="stringliteral">&quot;----------------------------------------&quot;</span>;
<a name="l00195"></a>00195         <span class="keyword">const</span> <span class="keywordtype">int</span>  lineSz = <span class="keyword">sizeof</span> (line) - 1;
<a name="l00196"></a>00196 
<a name="l00197"></a>00197         printf (<span class="stringliteral">&quot;Done %7lu/%7u samples [%.*s|%.*s] %3u%%  \r&quot;</span>,
<a name="l00198"></a>00198                  pos, size, (<span class="keywordtype">int</span>) (lineSz*done/100), line, (<span class="keywordtype">int</span>) (lineSz - lineSz*done/100), line, done);
<a name="l00199"></a>00199 
<a name="l00200"></a>00200         <span class="keywordflow">if</span> (done &gt;= 100) <span class="keywordflow">break</span>;
<a name="l00201"></a>00201         Sleep (100);
<a name="l00202"></a>00202         }
<a name="l00203"></a>00203 
<a name="l00204"></a>00204     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (0);
<a name="l00205"></a>00205     printf (<span class="stringliteral">&quot;\n\n&quot;</span>);
<a name="l00206"></a>00206     }
<a name="l00207"></a>00207 
<a name="l00208"></a>00208 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00209"></a>00209 
<a name="l00210"></a>00210 <span class="keywordtype">void</span> CatPurrDemo()
<a name="l00211"></a>00211     {
<a name="l00212"></a>00212     <a class="code" href="a00080.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> purr = <a class="code" href="a00080.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav</a> (<span class="stringliteral">&quot;Purr.wav&quot;</span>);
<a name="l00213"></a>00213 
<a name="l00214"></a>00214     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (purr);
<a name="l00215"></a>00215 
<a name="l00216"></a>00216     printf (<span class="stringliteral">&quot;Uninterruptable... do relax and wait %ld sec\n\n&quot;</span>, <a class="code" href="a00081.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> ((<span class="keywordtype">int</span>) purr.size() / <a class="code" href="a00080.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a> / 1000));
<a name="l00217"></a>00217 
<a name="l00218"></a>00218     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a>();
<a name="l00219"></a>00219     }
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00222"></a>00222 
<a name="l00223"></a>00223 <span class="keywordtype">void</span> RecordingDemo()
<a name="l00224"></a>00224     {
<a name="l00225"></a>00225     Banner (<span class="stringliteral">&quot;\r&quot;</span> <span class="stringliteral">&quot;Turn on the microphone and get prepared for a recording.&quot;</span>); Pause();
<a name="l00226"></a>00226 
<a name="l00227"></a>00227     <span class="keywordtype">int</span> time = 20000;
<a name="l00228"></a>00228 
<a name="l00229"></a>00229     printf (<span class="stringliteral">&quot;Recording %2d sec...\n&quot;</span>,   time/1000);
<a name="l00230"></a>00230 
<a name="l00231"></a>00231     <a class="code" href="a00080.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> wav = <a class="code" href="a00080.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn</a> (time, <a class="code" href="a00080.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205" title="Функция-монитор, регулярно вызывающаяся при записи звука.">MonitorProc</a>);
<a name="l00232"></a>00232     time = <a class="code" href="a00081.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> ((<span class="keywordtype">int</span>) wav.size() / <a class="code" href="a00080.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>);
<a name="l00233"></a>00233 
<a name="l00234"></a>00234     printf (<span class="stringliteral">&quot;\nRecorded: %2d sec\n&quot;</span>,  time/1000);
<a name="l00235"></a>00235     printf (<span class="stringliteral">&quot;\nPlaying %2d sec...\n&quot;</span>, time/1000);
<a name="l00236"></a>00236 
<a name="l00237"></a>00237     HWAVEOUT waveOut = <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (wav);
<a name="l00238"></a>00238     <span class="keywordflow">while</span> (!_kbhit() &amp;&amp; <a class="code" href="a00080.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition</a> (waveOut) &lt; wav.size()) Sleep (100);
<a name="l00239"></a>00239     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (0);
<a name="l00240"></a>00240 
<a name="l00241"></a>00241     printf (<span class="stringliteral">&quot;\nSaving to WAV file...\n\n&quot;</span>);
<a name="l00242"></a>00242     <a class="code" href="a00080.htm#gaf4acf7c838bf10514034eaebffe914bc" title="Сохраняет звуковые данные в WAV-файле.">txWaveSaveWav</a> (wav, <span class="stringliteral">&quot;Recording.wav&quot;</span>);
<a name="l00243"></a>00243     }
<a name="l00244"></a>00244 
<a name="l00245"></a><a class="code" href="a00080.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205">00245</a> <span class="keywordtype">bool</span> <a class="code" href="a00080.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205" title="Функция-монитор, регулярно вызывающаяся при записи звука.">MonitorProc</a> (HWAVEIN, <a class="code" href="a00080.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>&amp; data, <span class="keywordtype">void</span>*)
<a name="l00246"></a>00246     {
<a name="l00247"></a>00247     <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> line1[] = <span class="stringliteral">&quot;---------------&quot;</span>;
<a name="l00248"></a>00248     <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> line2[] = <span class="stringliteral">&quot;|||||||||||||||&quot;</span>;
<a name="l00249"></a>00249     <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span>  lineSz  = <span class="keyword">sizeof</span> (line1) - 1;
<a name="l00250"></a>00250 
<a name="l00251"></a>00251     <span class="keywordtype">unsigned</span> pos  = (unsigned) data.size();
<a name="l00252"></a>00252     <span class="keywordtype">unsigned</span> size = (unsigned) data.capacity();
<a name="l00253"></a>00253     <span class="keywordtype">unsigned</span> done = (unsigned) (100 * pos/size);
<a name="l00254"></a>00254 
<a name="l00255"></a>00255     <span class="keywordtype">double</span> avr = 10;
<a name="l00256"></a>00256     <span class="keywordflow">if</span> (pos &gt;= 100) <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = pos - 100; i &lt; pos; i++) avr += (abs (data[i][0]) + abs (data[i][1])) / <a class="code" href="a00080.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>;
<a name="l00257"></a>00257     <span class="keywordtype">int</span> vol = (avr &lt;= 100)? (<span class="keywordtype">int</span>) avr : 100;
<a name="l00258"></a>00258 
<a name="l00259"></a>00259     printf (<span class="stringliteral">&quot;Done %6u/%6u samples   [%.*s|%.*s] %3u%%  [%.*s%.*s%s %3d%%  \r&quot;</span>,
<a name="l00260"></a>00260              pos, size,
<a name="l00261"></a>00261              (<span class="keywordtype">int</span>) (lineSz*done/100), line1, (<span class="keywordtype">int</span>) (lineSz - lineSz*done/100), line1,                         done,
<a name="l00262"></a>00262              (<span class="keywordtype">int</span>) (lineSz*vol /100), line2, (<span class="keywordtype">int</span>) (lineSz - lineSz*vol /100), line1, (vol &lt; 100? <span class="stringliteral">&quot;]&quot;</span> : <span class="stringliteral">&quot;X&quot;</span>), vol);
<a name="l00263"></a>00263 
<a name="l00264"></a>00264     <span class="keywordflow">return</span> (_kbhit()? ((<span class="keywordtype">void</span>) _getch(), <span class="keyword">false</span>) : <span class="keyword">true</span>);
<a name="l00265"></a>00265     }
<a name="l00266"></a>00266 
<a name="l00267"></a>00267 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00268"></a>00268 
<a name="l00269"></a>00269 <span class="comment">// For idea of this demo see: https://www.youtube.com/watch?v=kPRA0W1kECg</span>
<a name="l00270"></a>00270 
<a name="l00271"></a>00271 <span class="keyword">struct </span>Number_t
<a name="l00272"></a>00272     {
<a name="l00273"></a>00273     <span class="keywordtype">int</span> val_;
<a name="l00274"></a>00274 
<a name="l00275"></a>00275     Number_t();
<a name="l00276"></a>00276 
<a name="l00277"></a>00277     Number_t&amp; operator = (<span class="keyword">const</span> Number_t&amp; that);
<a name="l00278"></a>00278     <span class="keywordtype">bool</span>      operator &lt; (<span class="keyword">const</span> Number_t&amp; that) <span class="keyword">const</span>;
<a name="l00279"></a>00279 
<a name="l00280"></a>00280     <span class="keywordtype">bool</span> draw (COLORREF color, COLORREF fillColor) <span class="keyword">const</span>;
<a name="l00281"></a>00281 
<a name="l00282"></a>00282     <span class="keyword">static</span> <span class="keywordtype">void</span> setinfo (<span class="keyword">const</span> Number_t* data, <span class="keywordtype">size_t</span> size);
<a name="l00283"></a>00283 
<a name="l00284"></a>00284     <span class="keyword">static</span> <span class="keyword">const</span> Number_t* data__;
<a name="l00285"></a>00285     <span class="keyword">static</span>       <span class="keywordtype">size_t</span>    size__;
<a name="l00286"></a>00286     };
<a name="l00287"></a>00287 
<a name="l00288"></a>00288 <span class="keyword">const</span> Number_t* Number_t::data__   = NULL;
<a name="l00289"></a>00289       <span class="keywordtype">size_t</span>    Number_t::size__   = 0;
<a name="l00290"></a>00290 
<a name="l00291"></a>00291 Number_t::Number_t() :
<a name="l00292"></a>00292     val_ (88 + rand() % 2552)
<a name="l00293"></a>00293     {}
<a name="l00294"></a>00294 
<a name="l00295"></a>00295 <span class="keywordtype">void</span> Number_t::setinfo (<span class="keyword">const</span> Number_t* data, <span class="keywordtype">size_t</span> size)
<a name="l00296"></a>00296     {
<a name="l00297"></a>00297     data__ = data;
<a name="l00298"></a>00298     size__ = size;
<a name="l00299"></a>00299 
<a name="l00300"></a>00300     <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 0; i &lt; size__; i++) data__[i].draw (<a class="code" href="a00082.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (64, 64, 64), <a class="code" href="a00082.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (32, 32, 32));
<a name="l00301"></a>00301     }
<a name="l00302"></a>00302 
<a name="l00303"></a>00303 <span class="keywordtype">bool</span> Number_t::draw (COLORREF color, COLORREF fillColor)<span class="keyword"> const</span>
<a name="l00304"></a>00304 <span class="keyword">    </span>{
<a name="l00305"></a>00305     <span class="keywordflow">if</span> (_kbhit()) <span class="keywordflow">throw</span> EOF;
<a name="l00306"></a>00306 
<a name="l00307"></a>00307     <span class="keyword">const</span> <span class="keywordtype">int</span> width = 9;
<a name="l00308"></a>00308 
<a name="l00309"></a>00309     <span class="keywordtype">int</span> n = (int) (<span class="keyword">this</span> - data__);
<a name="l00310"></a>00310     <span class="keywordflow">if</span> (!data__ || !(0 &lt;= n &amp;&amp; n &lt; (<span class="keywordtype">int</span>) size__)) <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00311"></a>00311 
<a name="l00312"></a>00312     <span class="keywordtype">int</span> x0 = <a class="code" href="a00082.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a>()/2 - width * (int)size__/2;
<a name="l00313"></a>00313 
<a name="l00314"></a>00314     <a class="code" href="a00082.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>); <a class="code" href="a00082.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00315"></a>00315     <a class="code" href="a00082.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (x0 + n*width, 500, x0 + (n+1)*width, 500 - 400);
<a name="l00316"></a>00316 
<a name="l00317"></a>00317     <a class="code" href="a00082.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (color); <a class="code" href="a00082.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (fillColor);
<a name="l00318"></a>00318     <a class="code" href="a00082.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (x0 + n*width, 500, x0 + (n+1)*width, 500 - val_/10);
<a name="l00319"></a>00319 
<a name="l00320"></a>00320     <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00321"></a>00321     }
<a name="l00322"></a>00322 
<a name="l00323"></a>00323 Number_t&amp; Number_t::operator = (<span class="keyword">const</span> Number_t&amp; that)
<a name="l00324"></a>00324     {
<a name="l00325"></a>00325     <span class="keywordflow">if</span> (_kbhit()) <span class="keywordflow">throw</span> EOF;
<a name="l00326"></a>00326 
<a name="l00327"></a>00327     val_ = that.val_;
<a name="l00328"></a>00328     draw (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00329"></a>00329 
<a name="l00330"></a>00330     <span class="keywordflow">return</span> *<span class="keyword">this</span>;
<a name="l00331"></a>00331     }
<a name="l00332"></a>00332 
<a name="l00333"></a>00333 <span class="keywordtype">bool</span> Number_t::operator &lt; (<span class="keyword">const</span> Number_t&amp; that)<span class="keyword"> const</span>
<a name="l00334"></a>00334 <span class="keyword">    </span>{
<a name="l00335"></a>00335     <span class="keywordflow">if</span> (_kbhit()) <span class="keywordflow">throw</span> EOF;
<a name="l00336"></a>00336 
<a name="l00337"></a>00337     this-&gt;draw (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" title="Светло-красный цвет. Не самого лучшего оттенка.">TX_LIGHTRED</a>, <a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>);
<a name="l00338"></a>00338     that. draw (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" title="Светло-красный цвет. Не самого лучшего оттенка.">TX_LIGHTRED</a>, <a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>);
<a name="l00339"></a>00339 
<a name="l00340"></a>00340     <a class="code" href="a00080.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (50, val_, 10, that.val_, 10);
<a name="l00341"></a>00341 
<a name="l00342"></a>00342     this-&gt;draw (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00343"></a>00343     that. draw (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00344"></a>00344 
<a name="l00345"></a>00345     <span class="keywordflow">return</span> val_ &lt; that.val_;
<a name="l00346"></a>00346     }
<a name="l00347"></a>00347 
<a name="l00348"></a>00348 <span class="keywordtype">void</span> Sort1Demo()
<a name="l00349"></a>00349     {
<a name="l00350"></a>00350     <span class="keywordflow">try</span>
<a name="l00351"></a>00351         {
<a name="l00352"></a>00352         Number_t data[16];
<a name="l00353"></a>00353         Number_t::setinfo (data, <a class="code" href="a00081.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (data));
<a name="l00354"></a>00354 
<a name="l00355"></a>00355         <span class="keywordflow">for</span> (<span class="keywordtype">int</span> left = 0, right = (<span class="keywordtype">int</span>) <a class="code" href="a00081.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (data) - 1; left &lt; right; )
<a name="l00356"></a>00356             {
<a name="l00357"></a>00357             <span class="keywordtype">bool</span> change = <span class="keyword">false</span>;
<a name="l00358"></a>00358 
<a name="l00359"></a>00359             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = left; i &lt; right; i++)
<a name="l00360"></a>00360                 <span class="keywordflow">if</span> (data[i+1] &lt; data[i]) { std::swap (data[i+1], data[i]); change = <span class="keyword">true</span>; }
<a name="l00361"></a>00361 
<a name="l00362"></a>00362             right--;
<a name="l00363"></a>00363             <span class="keywordflow">if</span> (!change) <span class="keywordflow">break</span>;
<a name="l00364"></a>00364 
<a name="l00365"></a>00365             change = <span class="keyword">false</span>;
<a name="l00366"></a>00366 
<a name="l00367"></a>00367             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = right-1; i &gt;= left; i--)
<a name="l00368"></a>00368                 <span class="keywordflow">if</span> (data[i+1] &lt; data[i]) { std::swap (data[i+1], data[i]); change = <span class="keyword">true</span>; }
<a name="l00369"></a>00369 
<a name="l00370"></a>00370             left++;
<a name="l00371"></a>00371             <span class="keywordflow">if</span> (!change) <span class="keywordflow">break</span>;
<a name="l00372"></a>00372             }
<a name="l00373"></a>00373         }
<a name="l00374"></a>00374 
<a name="l00375"></a>00375     <span class="keywordflow">catch</span> (...) {}
<a name="l00376"></a>00376     }
<a name="l00377"></a>00377 
<a name="l00378"></a>00378 <span class="keywordtype">void</span> Sort2Demo()
<a name="l00379"></a>00379     {
<a name="l00380"></a>00380     <span class="keywordflow">try</span>
<a name="l00381"></a>00381         {
<a name="l00382"></a>00382         Number_t data[32];
<a name="l00383"></a>00383         Number_t::setinfo (data, <a class="code" href="a00081.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (data));
<a name="l00384"></a>00384 
<a name="l00385"></a>00385         std::sort (data, data + <a class="code" href="a00081.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (data));
<a name="l00386"></a>00386         }
<a name="l00387"></a>00387 
<a name="l00388"></a>00388     <span class="keywordflow">catch</span> (...) {}
<a name="l00389"></a>00389     }
<a name="l00390"></a>00390 
<a name="l00391"></a>00391 <span class="keywordtype">void</span> Sort3Demo()
<a name="l00392"></a>00392     {
<a name="l00393"></a>00393     <span class="keywordflow">try</span>
<a name="l00394"></a>00394         {
<a name="l00395"></a>00395         Number_t data[32];
<a name="l00396"></a>00396         Number_t::setinfo (data, <a class="code" href="a00081.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (data));
<a name="l00397"></a>00397 
<a name="l00398"></a>00398         std::stable_sort (data, data + <a class="code" href="a00081.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (data));
<a name="l00399"></a>00399         }
<a name="l00400"></a>00400 
<a name="l00401"></a>00401     <span class="keywordflow">catch</span> (...) {}
<a name="l00402"></a>00402     }
<a name="l00403"></a>00403 
<a name="l00404"></a>00404 <span class="comment">//-----------------------------------------------------------------------------------------------------------------</span>
<a name="l00405"></a>00405 
<a name="l00406"></a>00406 <span class="keywordtype">void</span> Banner (<span class="keyword">const</span> <span class="keywordtype">char</span>* text)
<a name="l00407"></a>00407     {
<a name="l00408"></a>00408     <span class="keywordflow">if</span> (<a class="code" href="a00082.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>() &amp;&amp; IsWindowVisible (<a class="code" href="a00082.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>()))
<a name="l00409"></a>00409         {
<a name="l00410"></a>00410         <span class="keyword">static</span> POINT size = <a class="code" href="a00082.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent</a>();
<a name="l00411"></a>00411 
<a name="l00412"></a>00412         <span class="keywordflow">if</span> (*text != <span class="charliteral">&#39;\f&#39;</span>)
<a name="l00413"></a>00413             {
<a name="l00414"></a>00414             <a class="code" href="a00082.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00415"></a>00415             <a class="code" href="a00082.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00416"></a>00416             }
<a name="l00417"></a>00417         <span class="keywordflow">else</span>
<a name="l00418"></a>00418             text++;
<a name="l00419"></a>00419 
<a name="l00420"></a>00420         <span class="keywordflow">if</span> (*text == <span class="charliteral">&#39;\r&#39;</span>) text++;
<a name="l00421"></a>00421         <span class="keywordflow">if</span> (*text == <span class="charliteral">&#39;\t&#39;</span>) text++;
<a name="l00422"></a>00422 
<a name="l00423"></a>00423         <a class="code" href="a00082.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
<a name="l00424"></a>00424         <a class="code" href="a00082.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_CENTER);
<a name="l00425"></a>00425 
<a name="l00426"></a>00426         <a class="code" href="a00082.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>); <a class="code" href="a00082.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, size.y * 0.95, size.x, size.y);
<a name="l00427"></a>00427         <a class="code" href="a00082.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>); <a class="code" href="a00082.htm#gaf6a9b31e58b6a0523ce1636a97053606" title="Рисует текст, размещенный в прямоугольной области.">txDrawText</a>  (0, size.y * 0.95, size.x, size.y, text);
<a name="l00428"></a>00428         <a class="code" href="a00082.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (0);
<a name="l00429"></a>00429 
<a name="l00430"></a>00430         <a class="code" href="a00082.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00082.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
<a name="l00431"></a>00431         }
<a name="l00432"></a>00432     <span class="keywordflow">else</span>
<a name="l00433"></a>00433         {
<a name="l00434"></a>00434         $y;
<a name="l00435"></a>00435         <span class="keywordflow">if</span> (*text == <span class="charliteral">&#39;\f&#39;</span>) {     text++; }
<a name="l00436"></a>00436         <span class="keywordflow">if</span> (*text == <span class="charliteral">&#39;\r&#39;</span>) { $r; text++; }
<a name="l00437"></a>00437         <span class="keywordflow">if</span> (*text == <span class="charliteral">&#39;\t&#39;</span>) { $d; text++; }
<a name="l00438"></a>00438 
<a name="l00439"></a>00439         printf (<span class="stringliteral">&quot;%s\n\n&quot;</span>, text);
<a name="l00440"></a>00440 
<a name="l00441"></a>00441         $d;
<a name="l00442"></a>00442         }
<a name="l00443"></a>00443     }
<a name="l00444"></a>00444 
<a name="l00445"></a>00445 <span class="keywordtype">void</span> Pause()
<a name="l00446"></a>00446     {
<a name="l00447"></a>00447     Banner (<span class="stringliteral">&quot;\f\t&quot;</span> <span class="stringliteral">&quot;Press a key to continue...&quot;</span>);
<a name="l00448"></a>00448 
<a name="l00449"></a>00449     <span class="keywordflow">while</span> (_kbhit()) (void) _getch();
<a name="l00450"></a>00450     (void) _getch();
<a name="l00451"></a>00451     }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00062.htm">TXWaveExample.cpp</a>      </li>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 172 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2023-08-07 12:07:33 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Mon Nov 13 2023 02:15:53. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>

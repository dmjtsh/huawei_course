; HEY THIS IS DIMAS ASSEMBLER!!!
; AND DIMAS QUADRATIC EQUATION SOLVER!!!
; LET ME TELL YOU FOR WHAT I USE MY REGS
; RAX FOR a COEFF 
; RBX FOR b COEFF
; RCX FOR c COEFF
; RDX FOR Discriminant
; RDI FOR First Root
; RSI FOR Second Root
; RDIMAS FOR Number of Roots

CALL user_input
CALL solve_quadratic
CALL print_roots
HLT

user_input:
IN
IN
IN
POP RCX
POP RBX
POP RAX
RET

print_no_roots:
PUSH 79 ; O ASCII code
PUSH 78 ; N ASCII code
OUTC
OUTC
JMP print_roots_end

print_inf_roots:
PUSH 70 ; F ASCII code
PUSH 78 ; N ASCII code
PUSH 73 ; I ASCII code
OUTC
OUTC
OUTC
JMP print_roots_end

print_one_root:
PUSH RDI ; x1
OUT
JMP print_roots_end

print_two_roots:
PUSH RDI ; x1 
PUSH RSI ; x2
OUT
OUT
JMP print_roots_end

print_roots:
PUSH RDIMAS
PUSH 0
JE print_no_roots
PUSH RDIMAS
PUSH -1
JE print_inf_roots
PUSH RDIMAS
PUSH 1
JE print_one_root
PUSH RDIMAS
PUSH 2
JE print_two_roots
print_roots_end:
RET

discr:
PUSH 4
PUSH RAX
PUSH RCX
MUL
MUL
PUSH RBX
PUSH RBX
MUL
SUB
POP RDX
RET

inf_roots:
PUSH -1 ; inf num of roots
POP RDIMAS
JMP solve_quadratic_end

no_roots:
PUSH 0 ; no roots
POP RDIMAS
JMP solve_quadratic_end

b_coeff_zero:
PUSH RCX
PUSH 0
JE inf_roots ; if c == 0
JMP no_roots ; else

solve_linear:
PUSH RBX
PUSH 0
JE b_coeff_zero ; if b == 0
PUSH RBX
PUSH RCX
PUSH 0
SUB
DIV
POP RDI
PUSH 1 ; one root
POP RDIMAS
JMP solve_quadratic_end

discr_zero:
PUSH 2
PUSH RAX
MUL
PUSH RBX
PUSH 0
SUB
DIV
POP RDI
PUSH 1 ; one_root
POP RDIMAS
JMP solve_quadratic_end

solve_quadratic:
PUSH RAX
PUSH 0
JE solve_linear ; if a == 0
CALL discr
PUSH RDX
PUSH 0
JA no_roots ; if D < 0
PUSH RDX
PUSH 0
JE discr_zero

PUSH RAX
PUSH 2
MUL
PUSH RDX
SQRT
PUSH RBX
PUSH 0
SUB
ADD
DIV
POP RDI ; x1 = ...

PUSH RAX
PUSH 2
MUL
PUSH RDX
SQRT
PUSH RBX
PUSH 0
SUB
SUB
DIV
POP RSI ; x2 = ...
PUSH 2 ; two_roots
POP RDIMAS
solve_quadratic_end:
RET
